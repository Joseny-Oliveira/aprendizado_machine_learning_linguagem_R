vendas <- c(12,15,3,5)
meses <- c ("Jan", "fev", "Mar","Abr")
vendas [1]
vendas [4]
vendas [c(1,4)]
vendas [1:3]
vendas [3] <- 13
vendas [4] <- 5
vendas[c(1,4)] <- c(0,90)
vendas [2:4] <- c(40,35,28)
meses [3:4] <- c("Março","Abril")
vendas [-4]
vendas <- vendas[-4]
vendas [4] <- 70
vendas [5:7] <- c(23,43,15)
vendas [4] <- 15
length(vendas)
vendas + 2
vendas * 2
vendas / 2
vendas - 2
vendas ^ 3
log(vendas)
mean(vendas)
mean(vendas)
max(vendas)
min(vendas)
sqrt(vendas)
sort(vendas)
sort(vendas, decreasing = T)
a <- log(vendas)
vendas <- vendas + vendas *2
vendas
vendas_v1 <- vendas
vendas_v2 <- c(15,30,40,23,34,31,80)
vendas_v2
vendas_v1 + vendas_v2
vendas_v1 - vendas_v2
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 <- vendas_v1[-1]
vendas_v1
vendas_v1 + vendas_v2
vendedor1 <- c("Nike","Adidas","Olympikus")
vendedor2 <- c("Adidas","Mizuno","Topper")
union (vendedor1 , vendedor2)
intersect(vendedor1 , vendedor2)
setdiff(vendedor2, vendedor1)
setdiff(vendedor1, vendedor2)
arroz_marcas ("Camil","Tio João","Prato Fino")
arroz_marcas <- c("Camil","Tio João","Prato Fino")
feijao_marcas <- c("Kicaldo", "Milano", "Urbano")
interaction(arroz_marcas, feijao_marcas)
a<-c("Camisa 1","Camisa 2")
b<-c("Calca 1","Calca 2","Calca 3")
expand.grid(a,b)
expand.grid(arroz_marcas, feijao_marcas)
length(vendas)
length(vendas)
# Vetores
12 15 3 5
vendas <- c(12,15,3,5)
meses <- c ("Jan", "fev", "Mar","Abr")
vendas2 <- scan()
NOME <- x
vendas [1]
vendas [4]
vendas [c(1,4)]
vendas [1:3]
# modificando
vendas [3] <- 13
vendas [4] <- 15
vendas[c(1,4)] <- c(0,90)
vendas [2:4] <- c(40,35,28)
meses [3:4] <- c("Março","Abril")
# retirando
vendas [-4]
vendas <- vendas[-4]
vendas [4] <- 70
vendas [5:7] <- c(23,43,15)
length(vendas)
vendas
vendas <- vendas + vendas *2
vendas_v1 <- vendas
vendas_v1
vendas_v2 <- c(15,30,40,23,34,31,80)
vendas_v1 + vendas_v2
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2
vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendas_v1 - vendas_v2 + vendas *4
vendedor1 <- c("Nike","Adidas","Olympikus")
vendedor2 <- c("Adidas","Mizuno","Topper")
union (vendedor1 , vendedor2)
intersect(vendedor1 , vendedor2)
setdiff(vendedor2, vendedor1)
setdiff(vendedor1, vendedor2)
arroz_marcas <- c("Camil","Tio João","Prato Fino")
feijao_marcas <- c("Kicaldo", "Milano", "Urbano")
interaction(arroz_marcas, feijao_marcas)
expand.grid(arroz_marcas, feijao_marcas)
a<-c("Camisa 1","Camisa 2")
b<-c("Calca 1","Calca 2","Calca 3")
expand.grid(a,b)
expand.grid(a,b)
a<-c("Camisa 1","Camisa 2")
b<-c("Calca 1","Calca 2","Calca 3")
expand.grid(a,b)
interaction(a,b)
produtos <- c("TV","Refrigerador","Notebook","Celular")
quantidades <- c(30,60,20,15)
quantidades > 10
quantidades > 100
quantidades > 10
quantidades > 20
quantidades >= 20
quantidades > 20
quantidades >= 20
quantidades <= 20
quantidades == 20
quantidades != 25
quantidades2 <- quantidades * 2
quantidades2
quantidades == quantidades2
quantidades != quantidades2
quantidades > quantidades2
quantidades2 > quantidades
quantidades [3] == 60
quantidades [3]
quantidades
produtos == "TV"
sum(produtos == "TV")
nomes<-c("Maria","João","Luiza","Paula")
match("Paula", nomes)
prova1<-c(8,9,5,6,7,8,8,8,5)
prova2<-c(2,3,4,3,6,4,2,9,5)
prova3<-c(1,6,2,9,1,10,2,9,2)
install.packages("dplyr")
library(dplyr)
install.packages("hflights")
library(hflights)
hflights
head(hflights)
head(hflights)
head(hflights, n = 10)
summary(hflights)
?hflights
str(hflights)
names(hflights)
class(hflights)
hflights <- tibble(hflights)
calss(hflights)
class(hflights)
hflights <- tbl_df(hflights)
class(hflights)
hflights
hflights$UniqueCarrier
lut <- c ("AA" = "American", "AS" = "Alaska","B6" = "JetBlue", "CO"= "Continental",
"DL" = "Delta", "OO" = "Skywest", "UA"= "United", "US"= "US_Airways",
"WN" = "Southwest", "EV" = "Atlantic_Southeast", "F9" =  "Frontier",
"FL" = "Airtrain", "MQ" = "American_Eagle", "XE" = "ExpressJet", "YV" = "Mesa")
lut
hflights$Carrier <- lut[hflights$UniqueCarrier]
hflights$UniqueCarrier
hflights$Carrier <- lut[hflights$UniqueCarrier]
hflights$UniqueCarrier
hflights$Carrier <- lut[hflights$UniqueCarrier]
hflights$UniqueCarrier
lut
hflights$Carrier <- lut[hflights$UniqueCarrier]
hflights$Carrier
library(hflights)
glimpse(hflights)
library(dplyr)
glimpse(hflights)
hflights$CancellationCode
lut <- c("A" = "carrier", "B" = "weather", "C" = "FFA", "D" = "security",
" " = "not cancelled")
hflights$CancellationCode <- lut[hflights$CancellationCode]
hflights$CancellationCode
glimpse(hflights)
select(hflights, var1:var3)
select(hflights, ActualElapsedTime , AirTime, ArrDelay, DepDelay)
select(hflights, Origin: Cancelled)
select(hflights, - (DepTime:AirTime))
a -< 10
a
a
a <- 10
a
b
b = 10
b
B
c <- 10
10 -> c
c -> d
c -> 10
c -> 10 # Nao podemos criar variaveis com nome de numero
c <- 10 # Nao podemos criar variaveis com nome de numero
c -> d
d
c <- a + b
c
a <- "Heitor"
b <- "Joao"
c <- a + b
a <- 10
b <- 5
c <- a + b
c
a
a <- "Heitor"
b <- "Joao"
a <- "Heitor"
b <- "Joao"
c <- c (a,b)
c
c <- ("Heitor", "Joao")
c
?c
a <- c(10,5,15,20)
a
?summary
summary(a)
min(a)
max(a)
sd(a)
summary(c)
a[1]
a[1:3]
a[1,3]
a[1]
summary(a)
summary(c)
# Funcao de um pacote
?str_c
install.packages("stringr")
# Funcao de um pacote
?str_c
library(stringr)
# Funcao de um pacote
?str_c
NomeCompleto <- str_c(Nome, Sobrenome)
Nome <- "Joao"
Sobrenome <- "Silva"
NomeCompleto <- str_c(Nome, Sobrenome)
NomeCompleto
NomeCompleto <- str_c(Nome, " ", Sobrenome)
NomeCompleto <- str_c(Nome, " ", Sobrenome)
NomeCompleto
NomeCompleto
5+5
10 - 8
9/3
4*2
4 ** 2
4 ^ 2
5 == 6
5 == 5
5 != 6
5 != 5
4 > 2
4 > 6
3 < 2
3 < 4
6 == 6 & 7 == 8
6 == 6 & 7 != 8
5 > 3 & 5 < 8
6 == 6 | 7 == 8
!6 == 6
4 >= 5
4 >= 4
6 <= 8
6 <= 5
6 == 6 & 7 == 8
6 == 6 & 7 != 8
5 > 3 & 5 < 8
5 > 3 | 5 < 8
nome <- c ("joseny", "äwdrey")
is.vector(nomes)
is.vector(nome)
peso <- c (45,50,60,55,58,56,48)
altura <- c(1.54,1.55,1.65,1.60,1.65,1.63,1.60)
plot(peso,altura)
plot( peso,altura)
peso <- c (45,50,60,55,58,56,48)
altura <- c(1.54,1.55,1.65,1.60,1.65,1.63,1.60)
plot( peso,altura)
plot(peso,altura)
plot(peso,altura)
lm(altura ~ peso)
abline(lm(altura ~ peso))
x <- 1:250
x
rnorm(5)
y <- rnorm(250)
y
plot (x,y)
y <- rnorm(250) + x
y <- rnorm(250)
y <- rnorm(250) + x
y
plot (x,y)
rnorm(5, sd =30)
y <- rnorm(250 , sd =25) + x
plot (x,y)
?rnorm
hist(rnorm(250, sd = 25))
hist(rnorm(250, mean = 1000, sd = 25))
hist(rnorm(250, mean = 1000, sd = 25))
# Definindo o numero randomico
set.seed(1)
hist(rnorm(250, mean = 1000, sd = 25))
# Definindo o numero randomico
set.seed(1)
# criando o modelo
?lm
lm(y ~ x)
# inserindo a reta no gráfico
abline(-2.389, 1.028)
# inserindo a reta no gráfico
abline(-2.389, 1.028)
plot (x,y)
# inserindo a reta no gráfico
abline(-2.389, 1.028)
# inserindo a reta no grafico
abline(lm(y ~ x))
# inserindo a reta no gráfico
abline(-2.389, 1.028)
# inserindo a reta no grafico
abline(lm(y ~ x))
# grafico melhorado
plot (x, y, pch = 19, col = "blue")
abline(lm(y ~ x), col = "red", lwd = 2)
?plot
?plot
setwd("C:/Users/jgo_awd/Documents/Ciencia_de_Dados/Didatica-Tech")
df <- read.csv("DataFrame.csv", sep = ";")
View(df)
str(df)
summary(df)
df$ONIBUS <- NULL
df
df$UPS
summary(df$UPS)
df$UPS <- as.factor(df$UPS)
df$UPS
summary(df$UPS)
df$Nova <- "a"
class(df$Nova)
df$Nova <- c(2,5,10)
df$Nova <- c(2,5,10,NA,NA,NA,NA,NA,NA,NA)
df$Nova <- c(2,5,10,NA,NA,NA,NA,NA,NA)
df$Nova <- NULL
df$Nova <- NA
df$Nova[1:3] <-  c(2,5,10)
class(df$Nova)
# Definir area de trabalho
setwd("C:/Users/jgo_awd/Documents/Ciencia_de_Dados/Didatica-Tech")
df <- read.csv("DataFrame.csv", sep = ";")
df[1]
df[1,]
df[,1]
df[,2]
df[1:6]
df[1:6]
df[-4] # excluindo a coluna da visualização
df[1,1]
df[1,1:6]
df[1,-4]
df[1:3,1:6]
df[-1,-4]
df[(-3,-4,-5,-6)]
df[c(-3,-4,-5,-6)]
df <- df[c(-3,-4,-5,-6)]
df
# filtrando as variaveis
df [ 1,2 ]
# filtrando as variaveis
df [ 1,1 ]
df$REGIAO
df$REGIAO[1]
df$AUTO [2:4]
df[df$UPS == 1]
df[df$UPS == 1,]
df$UPS == 1
# modificando o DF
df <- df[df$UPS == 1,]
df1 <- read.csv("DataFrame.csv", sep = ";")
View(df1)
view(df)
view(df)
view(df)
View(df)
view(df)
View(df)
View(df1)
str(df)
df[1]
df$DIA_SEM
Col1 <- df[1]
View(Col1)
Col2 <- df$DIA_SEM
class(df$DIA_SEM)
class(Col2)
class(Col1)
df[,2]
df[1,] # retorna a primeira linha
df[,2]
View(df)
df[1:6]
View(df)
df[1,-4]
View(df)
df$REGIAO[1]
df$UPS == 1
df[df$UPS == 1,]
library (dplyr)
df <- read.csv("kc_house_data.csv") %%
select(-id, -date, -sqrt_basement, -zipcode, -lat, -long)
?dplyr
df <- read.csv("kc_house_data.csv") %%
select(-id, -date, -sqft_basement, -zipcode, -lat, -long)
df <- read.csv("kc_house_data.csv") %%
select(-id, -date, -sqft_basement, -zipcode, -lat, -long)
df <- read.csv("kc_house_data.csv") %%
select(- id, -date, -sqft_basement, -zipcode, -lat, -long)
df <- read.csv("kc_house_data.csv") %>%
select(-id, -date, -sqft_basement, -zipcode, -lat, -long)
df
View(df)
set.seed(1)
filtro <- sample(1: nrow(df), nrow(df)* 0.7)
treino <- df[filtro,]
teste <- df[-filtro]
teste <- df[-filtro,]
modelo <- lm (price ~., treino)
modelo
# Prevendo os precos no dataset de teste
Prev <- predict(modelo, teste)
Prev
# calculando R2
SQt = sum((mean(teste$price) - teste$price)**2)
SQres = sum((Prev - teste$price)**2)
R2 = (SQt - SQres) / SQt
R2
# Detalhamento
summary(modelo)
modelo <-  lm(price ~ bedrooms + bathrooms + floors, treino)
Prev <- predict(modelo, teste)
summary(modelo)
teste [1 , c(1,2,3,6)]
Prev[1]
modelo$coefficients
-27701.254 +  19097.491* 3 +   235047.552 *2 + 3092.535 *1
